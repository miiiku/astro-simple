<menu-close-anim-icon { ...{ ...Astro.props } }>
  <svg  xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24">
    <g stroke-linecap="round" stroke-linejoin="round" stroke-width="2" fill="none" stroke="currentColor">
      <path class="line-t" stroke-dasharray="27,44" stroke-dashoffset="9" d="M2.993761,2.953895c0,0,12.620508,0,18.029297,0C15.614269,8.385034,8.402549,15.626554,2.99376,21.057693" />
      <path class="line-m" stroke-dasharray="14,14" stroke-dashoffset="0" d="M7.597586,12h13.425473" />
      <path class="line-b" stroke-dasharray="26,34" stroke-dashoffset="17" d="M11.999999,21.057693h9.02306L2.993761,2.953895" />
    </g>
  </svg>
</menu-close-anim-icon>

<script>
  import gsap from "gsap";

  const mo = new MutationObserver(([ mutation ]) => {
    if (mutation.attributeName === "active") {
      const target = mutation.target as MenuCloseAnimIcon;
      if (target.getAttribute("active") !== null) {
        target.play();
      } else {
        target.reverse();
      }
    }
  });

  class MenuCloseAnimIcon extends HTMLElement {
    status: 0 | 1;
    duration: number;
    initialized: boolean;
    tweenTop: gsap.core.Tween;
    tweenMid: gsap.core.Tween;
    tweenBottom: gsap.core.Tween;

    constructor() {
      super();

      this.status = 0;

      this.duration = 0.5;

      this.initialized = true;

      this.tweenTop = gsap.to(this.querySelector(".line-t"), {
        attr: { "stroke-dashoffset": -18 },
        duration: this.duration,
      }).pause();

      this.tweenMid = gsap.to(this.querySelector(".line-m"), {
        attr: { "stroke-dashoffset": -14 },
        duration: this.duration,
      }).pause();

      this.tweenBottom = gsap.to(this.querySelector(".line-b"), {
        attr: { "stroke-dashoffset": -9 },
        duration: this.duration,
      }).pause();

      mo.observe(this, { attributes: true });

      // this.querySelector("svg")?.addEventListener("click", () => {
      //   this.toggle();
      // });
    }

    toggle () {
      if (this.status === 0) {
        this.play();
      } else {
        this.reverse();
      }
    }

    play () {
      if (this.initialized) {
        this.tweenTop.play();
        this.tweenMid.play();
        this.tweenBottom.play();
      } else {
        this.tweenTop.progress(1);
        this.tweenMid.progress(1);
        this.tweenBottom.progress(1);
        this.initialized = true;
      }
      this.status = 1;
    }

    reverse() {
      this.status = 0;
      this.tweenTop.reverse();
      this.tweenMid.reverse();
      this.tweenBottom.reverse();
    }
  }

  customElements.define("menu-close-anim-icon", MenuCloseAnimIcon);
</script>
