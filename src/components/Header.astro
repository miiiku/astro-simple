---
import { SITE_TITLE, SITE_MENU } from "../consts"

import LogoIcon from "./icons/logo.astro"
import SearchIcon from "./icons/search.astro"
import MenuIcon from "./icons/menu.astro"
import AnimIcon from "./icons/anim.astro"

import DarkThemeIcon from "./icons/themeDark.astro"
import LightThemeIcon from "./icons/themeLight.astro"
import SystemThemeIcon from "./icons/themeSystem.astro"

const { pathname } = Astro.url
---
<header class="w-full sticky top-0 py-2 border-b theme-border shadow-sm after:theme-bg/80 after:absolute after:inset-0 after:backdrop-blur-lg after:backdrop-saturate-150">
  <div class="mx-auto w-full max-w-5xl px-6 relative z-10 flex flex-row justify-between items-center py-3">
    <a href="/" class="flex gap-2 items-center font-bold text-2xl theme-text-stress">
      <div class="w-9 h-9">
        <LogoIcon width="100%" height="100%" />
      </div>
      <h1>{ SITE_TITLE }</h1>
    </a>

    <nav>
      <button id="mobile-menu--btn" class="mobile:block hidden w-9 h-9 p-2 rounded-md border theme-border theme-text-stress hover:theme-text-hover active:bg-zinc-100">
        <!-- <MenuIcon width="100%" height="100%" /> -->
        <AnimIcon width="100%" height="100%" />
      </button>
      <ul class="mobile:hidden flex gap-5 items-center justify-between theme-text-stress">
        { SITE_MENU.map(menu => <li><a class={`font-bold hover:theme-text-hover px-2 py-1 ${ menu.url === pathname ? "underline decoration-wavy decoration-2 underline-offset-4" : "" }`} href={menu.url}>{menu.title}</a></li>) }
        <li>
          <button id="desktop-search--btn" class="w-9 h-9 p-2 rounded-md border border-transparent hover:theme-border hover:theme-text-hover active:bg-zinc-100" title="search"><SearchIcon width="100%" height="100%" /></button>
        </li>
        <li class="overflow-hidden">
          <div id="desktop-theme--block" class="w-9 h-9">
            <button id="desktop-theme-dark--btn" class="w-full h-full p-2 rounded-md border border-transparent hover:theme-border hover:theme-text-hover active:bg-zinc-100" title="dark theme"><DarkThemeIcon width="100%" height="100%" /></button>
            <button id="desktop-theme-light--btn" class="w-full h-full p-2 rounded-md border border-transparent hover:theme-border hover:theme-text-hover active:bg-zinc-100" title="light theme"><LightThemeIcon width="100%" height="100%" /></button>
          </div>
        </li>
        <li>
          <button id="desktop-theme-auto--btn" class="w-9 h-9 p-2 rounded-md border border-transparent hover:theme-border hover:theme-text-hover active:bg-zinc-100" title="auto theme"><SystemThemeIcon width="100%" height="100%" /></button>
        </li>
      </ul>
    </nav>
  </div>

  <ul id="mobile-menu--panel" class="hidden gap-5 py-4 flex-col items-center justify-between theme-text-stress relative z-10">
    { SITE_MENU.map(menu => <li class="mobile-menu-link opacity-0 translate-x-2"><a class={`font-bold hover:theme-text-hover px-2 py-1 ${ menu.url === pathname ? "underline decoration-wavy decoration-2 underline-offset-4" : "" }`} href={menu.url}>{menu.title}</a></li>) }
    <li class="flex gap-3 items-center justify-center">
      <button id="mobile-search--btn" class="mobile-menu--btn w-9 h-9 opacity-0 scale-50 p-2 rounded-md border theme-border hover:theme-text-hover active:bg-zinc-100">
        <SearchIcon width="100%" height="100%" title="search" />
      </button>
      <div class="overflow-hidden mobile-menu--btn opacity-0 scale-50">
        <div id="mobile-theme--block" class="w-9 h-9">
          <button id="mobile-theme-dark--btn" class="w-full h-full p-2 rounded-md border theme-border hover:theme-text-hover active:bg-zinc-100" title="dark theme"><DarkThemeIcon width="100%" height="100%" /></button>
          <button id="mobile-theme-light--btn" class="w-full h-full p-2 rounded-md border theme-border hover:theme-text-hover active:bg-zinc-100" title="light theme"><LightThemeIcon width="100%" height="100%" /></button>
        </div>
      </div>
      <button id="mobile-theme-auto--btn" class="mobile-menu--btn w-9 h-9 opacity-0 scale-50 p-2 rounded-md border theme-border hover:theme-text-hover active:bg-zinc-100">
        <SystemThemeIcon width="100%" height="100%" title="auto theme" />
      </button>
    </li>
  </ul>
</header>

<style>
  #mobile-menu--panel.open {
    @apply mobile:flex;
  }
</style>

<script>
  import gsap from "gsap";

  const desktopThemeBlock = document.querySelector("#desktop-theme--block") as HTMLDivElement;
  const mobileThemeBlock = document.querySelector("#mobile-theme--block") as HTMLDivElement;
  const mobileMenuPanel = document.querySelector("#mobile-menu--panel");
  
  const theme = (window.localStorage.getItem("theme") || "auto") as "auto" | "dark" | "light";

  let mobileMenuLinkTween = gsap.to(".mobile-menu-link", {
    x: 0,
    opacity: 1,
    duration: 0.3,
    stagger: 0.2,
  }).pause();

  let mobileMenuBtnTween = gsap.to(".mobile-menu--btn", {
    scale: 1,
    opacity: 1,
    duration: 0.3,
    stagger: 0.2,
  }).pause();

  const toggleMobileMenu = () => {
    mobileMenuPanel?.classList.toggle("open");
    if (mobileMenuPanel?.classList.contains("open")) {
      mobileMenuLinkTween.restart();
      mobileMenuBtnTween.restart();
    }
  }

  const switchTheme = (theme: "auto" | "dark" | "light") => {
    const rootDom = document.documentElement;
    const translateY = {
      "dark": 1,
      "light": 0,
      "auto": (() => {
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 1;
        }
        return 0;
      })(),
    }
    
    if (theme === "auto") {
      rootDom.classList.remove("dark")
      rootDom.classList.remove("light")
    }
    if (theme === "dark") {
      rootDom.classList.remove("light")
      rootDom.classList.add("dark")
    }
    if (theme === "light") {
      rootDom.classList.remove("dark")
      rootDom.classList.add("light")
    }
    if (desktopThemeBlock) {
      gsap.to("#desktop-theme--block", { duration: 1, ease: "elastic.out(1, 0.3)", yPercent: -(translateY[theme] * 100) });
    }
    if (mobileThemeBlock) {
      gsap.to("#mobile-theme--block", { duration: 1, ease: "elastic.out(1, 0.3)", yPercent: -(translateY[theme] * 100) });
    }
    window.localStorage.setItem("theme", theme);
  }

  switchTheme(theme);

  document.querySelector("#mobile-menu--btn")?.addEventListener("click", toggleMobileMenu);

  document.querySelector("#desktop-theme-auto--btn")?.addEventListener("click", () => switchTheme("auto"));
  document.querySelector("#desktop-theme-dark--btn")?.addEventListener("click", () => switchTheme("dark"));
  document.querySelector("#desktop-theme-light--btn")?.addEventListener("click", () => switchTheme("light"));
  document.querySelector("#mobile-theme-auto--btn")?.addEventListener("click", () => switchTheme("auto"));
  document.querySelector("#mobile-theme-dark--btn")?.addEventListener("click", () => switchTheme("dark"));
  document.querySelector("#mobile-theme-light--btn")?.addEventListener("click", () => switchTheme("light"));
</script>